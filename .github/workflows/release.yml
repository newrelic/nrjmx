name: Release pipeline

on:
  release:
    types:
      - released
    tags:
      - 'v*'

env:
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }}
  TAG: ${{ github.event.release.tag_name }}
  DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
  SCHEMA_BRANCH: ${{ github.event.release.tag_name }}
  AWS_S3_BUCKET_NAME: "nr-downloads-main"
  AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock"
  AWS_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_PRODUCTION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_PRODUCTION }}
  AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_PRODUCTION }}
  AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_PRODUCTION }}

jobs:
  publishing-to-s3:
    name: Publish linux artifacts into s3 production bucket
    runs-on: ubuntu-latest

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Publish all to S3 action
        uses: newrelic/infrastructure-publish-action@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}
          AWS_ROLE_SESSION_NAME: ${{ env.AWS_ROLE_SESSION_NAME }}
        with:
          tag: ${{env.TAG}}
          app_name: "nrjmx"
          repo_name: "newrelic/nrjmx"
          schema: "nrjmx"
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
          access_point_host: "production"
          run_id: ${{ github.run_id }}
          aws_region: ${{ env.AWS_REGION }}
          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
          # used for signing package stuff
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}

      - name: Notify successful release
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.COREINT_SLACK_TOKEN }}
          slack-channel: ${{ secrets.COREINT_SLACK_CHANNEL }}
          slack-text: "üéâ `${{ github.event.repository.full_name }}`: release promoted successfully! ${{ github.server_url }}/${{ github.event.repository.full_name }}/releases/tag/${{ env.TAG }}"

  notify-failure:
    if: ${{ always() && failure() }}
    needs: [publishing-to-s3]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure via Slack
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.COREINT_SLACK_TOKEN }}
          slack-channel: ${{ secrets.COREINT_SLACK_CHANNEL }}
          slack-text: "‚ùå `${{ github.event.repository.full_name }}`: [release pipeline failed](${{ github.server_url }}/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }})."
